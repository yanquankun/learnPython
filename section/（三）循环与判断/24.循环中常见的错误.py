"""
@Desc: 本讲解Python内置数据类型的循环中常见的错误
@Author: Mint.Yan
@Date: 2025-06-168 14:56:21
"""
# 1. 循环过程中改变遍历次数
for i in 1, 2, 3, 4, 5:
    i = 5
    print(i)
# 执行结果 5 5 5 5 5
# 这种情况会导致循环次数不确定，可能会导致无限循环或跳过某些元素

# 2. 遍历中修改列表导致误操作
list1 = ['a', 'b', 'c', 'd']
try:
    for i in range(len(list1)):
        list1.pop(i)
except IndexError as e:
    print("发生错误:", e)
# 列表在执行 pop() 之后，⻓度会减少，因此不能使用固定⻓度的 for 循环遍历

# 3. 循环嵌套中不同缩进会导致执行结果有差异
# while 外层循环:
#     while 内层循环:
#         语句....1
#         语句....n
#         和此语句块对⻬的语句，外层和内层循环均会执行
#     和内层 while 循环对⻬的语句，外层循环会执行
# 和外层 while 循环对⻬的语句，不会被循环执行
# 循环嵌套中的缩进导致运行语句有差别
# 这个问题很常见，在23单元中的飞机大战中，你会发现我使用了moved变量来控制跳出循环，如果不这样做，在按下s键的时候，会触发多次计算事件，导致出现错误的结果

# 举例：我们希望在i=1和j=1时，停止遍历
for i in range(3):
    for j in range(3):
        if i == 1 and j == 1:
            print("跳出内层循环")
            break  # 跳出内层循环
    print("外层循环继续执行")
# 这段代码中，你会发现，当 i=1 和 j=1 时，内层循环会跳出，但外层循环仍然会继续执行。这是因为 break 只会跳出当前所在的循环，而不会影响外层循环
